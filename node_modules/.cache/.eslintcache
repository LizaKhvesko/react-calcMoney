[{"/Users/lizahvesko/react/calc-money/src/index.js":"1","/Users/lizahvesko/react/calc-money/src/App.js":"2","/Users/lizahvesko/react/calc-money/src/components/Total/Total.js":"3","/Users/lizahvesko/react/calc-money/src/components/History/History.js":"4","/Users/lizahvesko/react/calc-money/src/components/Operation/Operation.js":"5","/Users/lizahvesko/react/calc-money/src/components/History/HistoryItem.js":"6"},{"size":247,"mtime":1646310643466,"results":"7","hashOfConfig":"8"},{"size":3226,"mtime":1646589505378,"results":"9","hashOfConfig":"8"},{"size":1033,"mtime":1646574443883,"results":"10","hashOfConfig":"8"},{"size":582,"mtime":1646588156344,"results":"11","hashOfConfig":"8"},{"size":1748,"mtime":1646556914025,"results":"12","hashOfConfig":"8"},{"size":495,"mtime":1646588223313,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1kbsrfb",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/lizahvesko/react/calc-money/src/index.js",[],[],["36","37"],"/Users/lizahvesko/react/calc-money/src/App.js",["38","39"],[],"import React from 'react';\nimport Total from './components/Total/Total';\nimport History from './components/History/History';\nimport Operation from './components/Operation/Operation';\nimport { isCompositeComponentWithType } from 'react-dom/test-utils';\n\nclass App extends React.Component {\n\n    state = {\n        transactions: JSON.parse(localStorage.getItem('calcMoney')) || [],\n        description: '',\n        amount: '',\n        resultIncome: 0,\n        resultExpenses: 0,\n        totalBalance: 0,\n    }\n\n    componentWillMount(){\n        this.getTotalBalance();\n    }\n\n    componentDidUpdate() {\n        this.addStorage();\n    }\n\n    addTransaction = add => {\n\n       const transactions = [...this.state.transactions];\n\n       const transaction = {\n           id: `cmr${(+new Date).toString(16)}`,\n           description: this.state.description,\n           amount: parseFloat(this.state.amount),\n           add\n       }\n       \n       transactions.push(transaction);\n       this.setState({ \n           transactions,\n           description: '',\n           amount: '',\n        }, this.getTotalBalance);\n    }\n\n    addAmount = e => {\n        this.setState({amount: e.target.value})\n    }\n\n    addDescription = e => {\n        this.setState({description: e.target.value})\n    }\n\n    getIncome = () => this.state.transactions\n        .filter(item => item.add)\n        .reduce((acc, item) => acc + item.amount, 0)\n    \n\n    getExpenses = () => this.state.transactions\n        .filter(item => !item.add)\n        .reduce((acc, item) => acc + item.amount, 0)\n\n    getTotalBalance() {\n        const resultIncome = this.getIncome();\n        const resultExpenses = this.getExpenses();\n        const totalBalance = resultIncome - resultExpenses;\n        this.setState({ resultIncome, resultExpenses, totalBalance })\n    }\n\n    addStorage() {\n       localStorage.setItem('calcMoney', JSON.stringify(this.state.transactions)) \n    }\n\n    delTransaction = key => {\n      const transactions = this.state.transactions.filter(item => item.id !== key);  \n      this.setState({ transactions}, this.getTotalBalance);\n    }\n\n    render() {\n        return (\n            <>\n            <header>\n                <h1>Кошелек</h1>\n                <h2>Калькулятор расходов</h2>\n            </header>\n\n            <main>\n                <div className=\"container\">\n                    <Total \n                        resultExpenses={this.state.resultExpenses}\n                        resultIncome={this.state.resultIncome}\n                        totalBalance={this.state.totalBalance}\n                    />\n                    <History \n                        transactions={this.state.transactions}\n                        delTransaction={this.delTransaction}\n                    />\n                    <Operation \n                        addTransaction={this.addTransaction}\n                        addAmount={this.addAmount}\n                        addDescription={this.addDescription}\n                        description={this.state.description}\n                        amount={this.state.amount}\n                    />  \n                </div>\n            </main>\n            </>\n        );\n    }\n}\n\nexport default App;\n","/Users/lizahvesko/react/calc-money/src/components/Total/Total.js",[],[],["40","41"],"/Users/lizahvesko/react/calc-money/src/components/History/History.js",[],[],["42","43"],"/Users/lizahvesko/react/calc-money/src/components/Operation/Operation.js",[],[],"/Users/lizahvesko/react/calc-money/src/components/History/HistoryItem.js",[],[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":5,"column":10,"nodeType":"50","messageId":"51","endLine":5,"endColumn":38},{"ruleId":"52","severity":1,"message":"53","line":31,"column":24,"nodeType":"54","messageId":"55","endLine":31,"endColumn":32,"fix":"56"},{"ruleId":"44","replacedBy":"57"},{"ruleId":"46","replacedBy":"58"},{"ruleId":"44","replacedBy":"59"},{"ruleId":"46","replacedBy":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'isCompositeComponentWithType' is defined but never used.","Identifier","unusedVar","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"63","text":"64"},["61"],["62"],["61"],["62"],"no-global-assign","no-unsafe-negation",[784,784],"()"]